<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <arg name="world" default="empty"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="worlds/empty.world"/> 

    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="verbose" value="false" />
  </include>



<group ns="first_robot">
      <param name="tf_prefix" value="robot1_tf" />

    <rosparam command="load" file="$(find joint_state_controller)/joint_state_controller.yaml" />
  <node name="joint_state_controller_spawner" pkg="controller_manager" type="spawner" output="screen" args="joint_state_controller" />

  <param name="robot_description" command="$(find xacro)/xacro '$(find rosbot_description)/urdf/rosbot.xacro'"/>

  <node name="rosbot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model rosbot1 -x 1 -y 10" />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

</group>


<group ns="second_robot">
      <param name="tf_prefix" value="robot2_tf" />

    <rosparam command="load" file="$(find joint_state_controller)/joint_state_controller.yaml" />
  <node name="joint_state_controller_spawner" pkg="controller_manager" type="spawner" output="screen" args="joint_state_controller" />

  <param name="robot_description" command="$(find xacro)/xacro '$(find rosbot_description)/urdf/rosbot.xacro'"/>

  <node name="rosbot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model rosbot2 -x 2 -y 10" />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

</group>

<group ns="third_robot">
      <param name="tf_prefix" value="robot3_tf" />

    <rosparam command="load" file="$(find joint_state_controller)/joint_state_controller.yaml" />
  <node name="joint_state_controller_spawner" pkg="controller_manager" type="spawner" output="screen" args="joint_state_controller" />

  <param name="robot_description" command="$(find xacro)/xacro '$(find rosbot_description)/urdf/rosbot.xacro'"/>

  <node name="rosbot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model rosbot3 -x 5 -y 7" />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

</group>

<group ns="fourth_robot">
      <param name="tf_prefix" value="robot4_tf" />

    <rosparam command="load" file="$(find joint_state_controller)/joint_state_controller.yaml" />
  <node name="joint_state_controller_spawner" pkg="controller_manager" type="spawner" output="screen" args="joint_state_controller" />

  <param name="robot_description" command="$(find xacro)/xacro '$(find rosbot_description)/urdf/rosbot.xacro'"/>

  <node name="rosbot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model rosbot4 -x 1 -y 9" />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

</group>

</launch>